#!/usr/bin/python2.6
#
# Copyright (c) 2011 by Delphix.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# - Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
# - Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

#
# This script marks bugs as integrated and adds a comment to note the gate
# that they were pushed to.
#

import xmlrpclib
import pyzilla
import sys
import os
import re


def usage():
    print "Usage: mark-integrated <bugid> ..."
    sys.exit(2)

if len(sys.argv) <= 1:
    usage()

ids = sys.argv[1:]

git_dir = os.getenv("GIT_DIR")
if not git_dir:
    print "GIT_DIR is not set"
    sys.exit(1)

p = re.compile(".*/([^/]+)/.git$")
m = p.match(git_dir)

if not m:
    print "GIT_DIR is invalid: " + git_dir
    sys.exit(1)

gate = m.group(1)

server = pyzilla.BugZilla("<bugzilla_url>")
server.login("<username>", "<password>")

try:
    server.Bug.update({
        "ids": ids,
        "status": "INTEGRATED",
        "comment": {
            "body": "pushed to " + gate
        }
    })
except xmlrpclib.Fault as (e):
    print e
    sys.exit(1)

print "bugs marked as integrated to " + gate

sys.exit(0)
